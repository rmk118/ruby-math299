[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Math 299",
    "section": "",
    "text": "Ruby Krasnow\nThis website will house my assignments as I work through the course material for QERM 514: Analysis of Ecological and Environmental Data, one of the core requirements for graduate students in the Quantitative Ecology & Resource Management (QERM) program at the University of Washington. The QERM 514 course materials developed and made publicly available online by Dr. Mark Scheuerell will serve as a foundation for a directed study I will complete during my final semester at Clark, supervised by Michael Satz (Clark University, Department of Mathematics)."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Math 299",
    "section": "",
    "text": "My name is Ruby Krasnow (she/her) and I am an aspiring quantitative marine ecologist interested in using modeling and data science to support sustainable fisheries management and marine aquaculture."
  },
  {
    "objectID": "HW/hw_01_intro_to_markdown.html",
    "href": "HW/hw_01_intro_to_markdown.html",
    "title": "HW1: Introduction",
    "section": "",
    "text": "Link to original assignment PDF\n\n1) Who am I & what do I study?\nI am an aspiring marine ecologist with a strong interest in sustainable fisheries and aquaculture. I am especially passionate about using mathematical and statistical models to understand aquatic ecosystems, support sustainable fisheries management, and advance the kelp and shellfish aquaculture industries. I am currently a senior at Clark University, where I am majoring in Biology with a minor in Mathematics. After graduating with my B.A. in December 2024, I will start my PhD in Marine Biology at the University of Maine. I am one of the team captains for the Clark cross-country team and am excited to continue my athletic as well as academic career by competing on the UMaine track and cross-country teams as a graduate student.\nA major focus of my research is enhancing the accuracy of kelp (Saccharina latissima) growth models by incorporating factors such as blade erosion, biofouling, genetic variation, and phenotypic plasticity. Additionally, I am collaborating with the NOAA Northeast Fisheries Science Center to model spatial variation in crustacean size-at-maturity, supporting the sustainable management of the emerging Jonah crab fishery in New England.\nTo learn more about me, you can visit my personal website: https://rmk118.github.io/\n\nKeywords\n\nquantitative marine ecology\nfisheries & aquaculture\n\nkelp aquaculture\nmodeling crustacean size-at-maturity\npopulation dynamics & stock assessment\n\nsynthesis research/meta-analyses\nopen & reproducible data science\n\n\n\n\n2) What do I want from this course?\n\nDevelop a more solid theoretical understanding of the concepts underlying the modeling techniques I frequently use in my research\nLearn new techniques for model selection and inference (e.g., practice cross-validation)\nBecome more familiar with distributions/models that can address common issues in ecological analyses, such as zero-inflated and hurdle models\n\n\n\n3) Plot air quality data\n\nggplot(air)+\n  geom_point(aes(x=wind, y=temp))+\n  theme_light()+ #define custom theme for ggplots\n  theme(\n    axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),\n    axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),\n    text=element_text(size=13))+labs(x=\"Wind speed (mph)\", y=\"Temperature (°F)\")+\n  xlim(0,NA)\n\n\n\n\nFigure 1: Avg. wind speed (mph) and max. daily temperature (°F) at LaGuardia Airport, NY, from May-Sept. 1973\n\n\n\n\n\n\n4) Say it with an equation\n\\[ Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\varepsilon  \\tag{1}\\] \\[ \\varepsilon \\sim N(0, \\sigma^2)\\]\nIn Equation 1, the two different predictor variables are represented by \\(X_1\\) and \\(X_2\\).\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#math-299-directed-study-environmental-data-analysis",
    "href": "index.html#math-299-directed-study-environmental-data-analysis",
    "title": "Math 299",
    "section": "",
    "text": "Ruby Krasnow\nThis website will house my assignments as I work through the course material for QERM 514: Analysis of Ecological and Environmental Data, one of the core requirements for graduate students in the Quantitative Ecology & Resource Management (QERM) program at the University of Washington. The QERM 514 course materials developed and made publicly available online by Dr. Mark Scheuerell will serve as a foundation for a directed study I will complete during my final semester at Clark, supervised by Michael Satz (Clark University, Department of Mathematics)."
  },
  {
    "objectID": "HW/hw_02_fitting_lm.html",
    "href": "HW/hw_02_fitting_lm.html",
    "title": "HW2: Linear Models",
    "section": "",
    "text": "Link to original assignment PDF\n\nTo be completed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Labs/lab1.html",
    "href": "Labs/lab1.html",
    "title": "Lecture & Lab 1: Fitting Linear Models",
    "section": "",
    "text": "Faraway, Ch. 1 & 2\nMatrix math cheat sheet\n\ndata(\"gala\")\nhead(gala) # or glimpse(gala)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecies\nEndemics\nArea\nElevation\nNearest\nScruz\nAdjacent\n\n\n\n\nBaltra\n58\n23\n25.09\n346\n0.6\n0.6\n1.84\n\n\nBartolome\n31\n21\n1.24\n109\n0.6\n26.3\n572.33\n\n\nCaldwell\n3\n3\n0.21\n114\n2.8\n58.7\n0.78\n\n\nChampion\n25\n9\n0.10\n46\n1.9\n47.4\n0.18\n\n\nCoamano\n2\n1\n0.05\n77\n1.9\n1.9\n903.82\n\n\nDaphne.Major\n18\n11\n0.34\n119\n8.0\n8.0\n1.84\n\n\n\n\n\ngala &lt;- gala %&gt;% select(-Endemics) %&gt;% clean_names()\n\nlmod &lt;- lm(species ~ area + elevation + nearest + scruz + adjacent, data = gala)\n\nsummary(lmod) # or faraway::sumary(lmod) or broom::tidy(lmod)\n\n\nCall:\nlm(formula = species ~ area + elevation + nearest + scruz + adjacent, \n    data = gala)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-111.679  -34.898   -7.862   33.460  182.584 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  7.068221  19.154198   0.369 0.715351    \narea        -0.023938   0.022422  -1.068 0.296318    \nelevation    0.319465   0.053663   5.953 3.82e-06 ***\nnearest      0.009144   1.054136   0.009 0.993151    \nscruz       -0.240524   0.215402  -1.117 0.275208    \nadjacent    -0.074805   0.017700  -4.226 0.000297 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 60.98 on 24 degrees of freedom\nMultiple R-squared:  0.7658,    Adjusted R-squared:  0.7171 \nF-statistic:  15.7 on 5 and 24 DF,  p-value: 6.838e-07\n\nx &lt;- model.matrix(~ area + elevation + nearest + scruz + adjacent, data = gala)\ny &lt;- gala$species\n  \nxtxi &lt;- solve(t(x) %*% x)\nxtxi %*% t(x) %*% y\n\n                    [,1]\n(Intercept)  7.068220709\narea        -0.023938338\nelevation    0.319464761\nnearest      0.009143961\nscruz       -0.240524230\nadjacent    -0.074804832\n\nsolve(crossprod(x,x),crossprod(x,y))\n\n                    [,1]\n(Intercept)  7.068220709\narea        -0.023938338\nelevation    0.319464761\nnearest      0.009143961\nscruz       -0.240524230\nadjacent    -0.074804832\n\ndeviance(lmod) #RSS\n\n[1] 89231.37\n\nsqrt(deviance(lmod)/df.residual(lmod)) #sigma\n\n[1] 60.97519\n\nsigma &lt;- summary(lmod)$sigma\n\nxtxi &lt;- summary(lmod)$cov.unscaled\n\n#standard errors of the coefficients\nsqrt(diag(xtxi))*sigma #OR\n\n(Intercept)        area   elevation     nearest       scruz    adjacent \n19.15419782  0.02242235  0.05366280  1.05413595  0.21540225  0.01770019 \n\nsummary(lmod)$coef[,2]\n\n(Intercept)        area   elevation     nearest       scruz    adjacent \n19.15419782  0.02242235  0.05366280  1.05413595  0.21540225  0.01770019 \n\n\n\n\n\n\n\ndata(\"teengamb\")\n\ngambmod &lt;- lm(gamble ~ sex + status + income + verbal, data = teengamb)\nmodsum&lt;- summary(gambmod)\nmodsum\n\n\nCall:\nlm(formula = gamble ~ sex + status + income + verbal, data = teengamb)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-51.082 -11.320  -1.451   9.452  94.252 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  22.55565   17.19680   1.312   0.1968    \nsex         -22.11833    8.21111  -2.694   0.0101 *  \nstatus        0.05223    0.28111   0.186   0.8535    \nincome        4.96198    1.02539   4.839 1.79e-05 ***\nverbal       -2.95949    2.17215  -1.362   0.1803    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 22.69 on 42 degrees of freedom\nMultiple R-squared:  0.5267,    Adjusted R-squared:  0.4816 \nF-statistic: 11.69 on 4 and 42 DF,  p-value: 1.815e-06\n\n#A\nmodsum$r.squared\n\n[1] 0.5267234\n\n#B\nunname(which.max(modsum$residuals))\n\n[1] 24\n\n#C\nmean(modsum$residuals)\n\n[1] -2.26769e-16\n\nmedian(modsum$residuals)\n\n[1] -1.451392\n\n#D\ncor(gambmod$fitted.values, modsum$residuals)\n\n[1] -5.79346e-17\n\nplot(gambmod, which = 1) # or DHARMa::plotConventionalResiduals(gambmod)\n\n\n\nDHARMa::plotQQunif(gambmod)\n\n\n\n#E\ncor(modsum$residuals, teengamb$gamble)\n\n[1] 0.687951\n\n#F \nabs(modsum$coefficients[\"sex\", \"Estimate\"])\n\n[1] 22.11833\n\nemmeans::emmeans(gambmod, \"sex\")\n\n sex emmean   SE df lower.CL upper.CL\n   0  28.24 4.69 42     18.8     37.7\n   1   6.12 5.91 42     -5.8     18.0\n\nConfidence level used: 0.95 \n\nemmplot &lt;- plot(emmeans(gambmod, \"sex\"), colors=c(\"#003087\")) # or marginal_effects::plot_predictions(gambmod, condition = \"sex\")\nemmplot+\n  mytheme+\n  labs(y=\"Sex\", x=\"Estimated marginal mean\")\n\n\n\n\n\n\n\n\ndata(\"uswages\")\n\nwagemod &lt;- lm(wage ~ educ + exper, data=uswages)\ntidy(wagemod)\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-242.799412\n50.6815927\n-4.790682\n1.8e-06\n\n\neduc\n51.175268\n3.3419257\n15.313108\n0.0e+00\n\n\nexper\n9.774767\n0.7505955\n13.022683\n0.0e+00\n\n\n\n\n\nwagemod$coefficients[\"educ\"]\n\n    educ \n51.17527 \n\n# Each additional year of education increases the predicted weekly wage by around $51\n\nlog_wagemod &lt;- lm(log(wage) ~ educ + exper, data=uswages)\nsummary(log_wagemod)\n\n\nCall:\nlm(formula = log(wage) ~ educ + exper, data = uswages)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.7533 -0.3495  0.1068  0.4381  3.5699 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.650319   0.078354   59.35   &lt;2e-16 ***\neduc        0.090506   0.005167   17.52   &lt;2e-16 ***\nexper       0.018079   0.001160   15.58   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6615 on 1997 degrees of freedom\nMultiple R-squared:  0.1749,    Adjusted R-squared:  0.174 \nF-statistic: 211.6 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\ncompare_performance(wagemod, log_wagemod)\n\nSome of the nested models seem to be identical\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nModel\nAIC\nAIC_wt\nAICc\nAICc_wt\nBIC\nBIC_wt\nR2\nR2_adjusted\nRMSE\nSigma\n\n\n\n\nwagemod\nlm\n29915.88\n0\n29915.9\n0\n29938.28\n0\n0.1351186\n0.1342524\n427.532832\n427.8538424\n\n\nlog_wagemod\nlm\n28706.68\n1\n28706.7\n1\n28729.08\n1\n0.1748605\n0.1740342\n0.660967\n0.6614633\n\n\n\n\n\ncheck_model(wagemod)\n\n\n\ncheck_model(log_wagemod)\n\n\n\n\nAlthough interpretation of the coefficients is less straightforward for the log-transformed model, it has much lower AIC/AICc and RMSE values and a higher R-squared, indicating it is a better fit for the data. The posterior predictive checks also look much better for the log model."
  },
  {
    "objectID": "Labs/lab1.html#exercises",
    "href": "Labs/lab1.html#exercises",
    "title": "Lecture & Lab 1: Fitting Linear Models",
    "section": "",
    "text": "data(\"teengamb\")\n\ngambmod &lt;- lm(gamble ~ sex + status + income + verbal, data = teengamb)\nmodsum&lt;- summary(gambmod)\nmodsum\n\n\nCall:\nlm(formula = gamble ~ sex + status + income + verbal, data = teengamb)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-51.082 -11.320  -1.451   9.452  94.252 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  22.55565   17.19680   1.312   0.1968    \nsex         -22.11833    8.21111  -2.694   0.0101 *  \nstatus        0.05223    0.28111   0.186   0.8535    \nincome        4.96198    1.02539   4.839 1.79e-05 ***\nverbal       -2.95949    2.17215  -1.362   0.1803    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 22.69 on 42 degrees of freedom\nMultiple R-squared:  0.5267,    Adjusted R-squared:  0.4816 \nF-statistic: 11.69 on 4 and 42 DF,  p-value: 1.815e-06\n\n#A\nmodsum$r.squared\n\n[1] 0.5267234\n\n#B\nunname(which.max(modsum$residuals))\n\n[1] 24\n\n#C\nmean(modsum$residuals)\n\n[1] -2.26769e-16\n\nmedian(modsum$residuals)\n\n[1] -1.451392\n\n#D\ncor(gambmod$fitted.values, modsum$residuals)\n\n[1] -5.79346e-17\n\nplot(gambmod, which = 1) # or DHARMa::plotConventionalResiduals(gambmod)\n\n\n\nDHARMa::plotQQunif(gambmod)\n\n\n\n#E\ncor(modsum$residuals, teengamb$gamble)\n\n[1] 0.687951\n\n#F \nabs(modsum$coefficients[\"sex\", \"Estimate\"])\n\n[1] 22.11833\n\nemmeans::emmeans(gambmod, \"sex\")\n\n sex emmean   SE df lower.CL upper.CL\n   0  28.24 4.69 42     18.8     37.7\n   1   6.12 5.91 42     -5.8     18.0\n\nConfidence level used: 0.95 \n\nemmplot &lt;- plot(emmeans(gambmod, \"sex\"), colors=c(\"#003087\")) # or marginal_effects::plot_predictions(gambmod, condition = \"sex\")\nemmplot+\n  mytheme+\n  labs(y=\"Sex\", x=\"Estimated marginal mean\")\n\n\n\n\n\n\n\n\ndata(\"uswages\")\n\nwagemod &lt;- lm(wage ~ educ + exper, data=uswages)\ntidy(wagemod)\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-242.799412\n50.6815927\n-4.790682\n1.8e-06\n\n\neduc\n51.175268\n3.3419257\n15.313108\n0.0e+00\n\n\nexper\n9.774767\n0.7505955\n13.022683\n0.0e+00\n\n\n\n\n\nwagemod$coefficients[\"educ\"]\n\n    educ \n51.17527 \n\n# Each additional year of education increases the predicted weekly wage by around $51\n\nlog_wagemod &lt;- lm(log(wage) ~ educ + exper, data=uswages)\nsummary(log_wagemod)\n\n\nCall:\nlm(formula = log(wage) ~ educ + exper, data = uswages)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.7533 -0.3495  0.1068  0.4381  3.5699 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.650319   0.078354   59.35   &lt;2e-16 ***\neduc        0.090506   0.005167   17.52   &lt;2e-16 ***\nexper       0.018079   0.001160   15.58   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6615 on 1997 degrees of freedom\nMultiple R-squared:  0.1749,    Adjusted R-squared:  0.174 \nF-statistic: 211.6 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\ncompare_performance(wagemod, log_wagemod)\n\nSome of the nested models seem to be identical\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nModel\nAIC\nAIC_wt\nAICc\nAICc_wt\nBIC\nBIC_wt\nR2\nR2_adjusted\nRMSE\nSigma\n\n\n\n\nwagemod\nlm\n29915.88\n0\n29915.9\n0\n29938.28\n0\n0.1351186\n0.1342524\n427.532832\n427.8538424\n\n\nlog_wagemod\nlm\n28706.68\n1\n28706.7\n1\n28729.08\n1\n0.1748605\n0.1740342\n0.660967\n0.6614633\n\n\n\n\n\ncheck_model(wagemod)\n\n\n\ncheck_model(log_wagemod)\n\n\n\n\nAlthough interpretation of the coefficients is less straightforward for the log-transformed model, it has much lower AIC/AICc and RMSE values and a higher R-squared, indicating it is a better fit for the data. The posterior predictive checks also look much better for the log model."
  },
  {
    "objectID": "Labs/lab1.html#simple-model",
    "href": "Labs/lab1.html#simple-model",
    "title": "Lecture & Lab 1: Fitting Linear Models",
    "section": "2.1 Simple model",
    "text": "2.1 Simple model\n\n2.1.1 Estimating beta-hat and y-hat\n\nnn &lt;- nrow(gala)\nyy &lt;- matrix(data=gala$species, nrow = nn, ncol = 1)\nhead(yy)\n\n     [,1]\n[1,]   58\n[2,]   31\n[3,]    3\n[4,]   25\n[5,]    2\n[6,]   18\n\nintercept &lt;- rep(1, nn)\narea &lt;- gala$area\nXX &lt;- cbind(intercept, area)\nhead(XX)\n\n     intercept  area\n[1,]         1 25.09\n[2,]         1  1.24\n[3,]         1  0.21\n[4,]         1  0.10\n[5,]         1  0.05\n[6,]         1  0.34\n\nbeta_hat &lt;- solve(t(XX) %*% XX) %*% t(XX) %*% yy\nbeta_hat\n\n                 [,1]\nintercept 63.78286147\narea       0.08196317\n\nHH &lt;- XX %*% solve(t(XX) %*% XX) %*% t(XX)\ny_hat &lt;- HH %*% yy\nhead(y_hat)\n\n         [,1]\n[1,] 65.83932\n[2,] 63.88450\n[3,] 63.80007\n[4,] 63.79106\n[5,] 63.78696\n[6,] 63.81073\n\nhead(XX %*% beta_hat)\n\n         [,1]\n[1,] 65.83932\n[2,] 63.88450\n[3,] 63.80007\n[4,] 63.79106\n[5,] 63.78696\n[6,] 63.81073\n\n\n\nggplot(gala, aes(x=area, y=species))+\n  geom_point()+\n  mytheme+\n  labs(x=expression(\"Area of island (\"*km^2*\")\"), y=\"Number of species\")+\n  geom_smooth(method=\"lm\", se=FALSE, formula = y~x, color=\"black\", linewidth=0.5)\n\n\n\n\n\n\n2.1.2 Automated model fitting\n\nsimple_model &lt;- lm(species ~ area, gala)\nsimple_model\n\n\nCall:\nlm(formula = species ~ area, data = gala)\n\nCoefficients:\n(Intercept)         area  \n   63.78286      0.08196  \n\n## via fitted\ny_hat_f &lt;- fitted(simple_model)\n## via predict\ny_hat_p &lt;- predict(simple_model, type = \"response\")\n## compare these to each other\nall.equal(y_hat_f, y_hat_p)\n\n[1] TRUE\n\n\n\n\n2.1.3 Goodness-of-fit\n\n## SSE\nresids &lt;- yy - y_hat\nSSE &lt;- sum(resids^2) # = t(resids) %*% resids\n\n## SSTO\nSSTO &lt;- sum((yy - mean(yy))^2)\n\n## R^2\n1 - SSE / SSTO\n\n[1] 0.3817301\n\nsummary(simple_model)\n\n\nCall:\nlm(formula = species ~ area, data = gala)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-99.495 -53.431 -29.045   3.423 306.137 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 63.78286   17.52442   3.640 0.001094 ** \narea         0.08196    0.01971   4.158 0.000275 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 91.73 on 28 degrees of freedom\nMultiple R-squared:  0.3817,    Adjusted R-squared:  0.3596 \nF-statistic: 17.29 on 1 and 28 DF,  p-value: 0.0002748\n\n\n\n\n2.1.4 Adjusted R-squared\n\nset.seed(514)\n## generate a vector of Gaussian white noise\nWN &lt;- rnorm(nn)\n## add this to our Galapagos data frame\ngala$WN &lt;- WN \n## fit a model with Area & WN\nsummary(lm(species ~ area + WN, gala))\n\n\nCall:\nlm(formula = species ~ area + WN, data = gala)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-93.86 -44.67 -21.73  15.93 308.84 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  70.68115   17.82480   3.965 0.000485 ***\narea          0.07892    0.01944   4.059 0.000378 ***\nWN          -20.27151   13.91996  -1.456 0.156843    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 89.95 on 27 degrees of freedom\nMultiple R-squared:  0.4268,    Adjusted R-squared:  0.3843 \nF-statistic: 10.05 on 2 and 27 DF,  p-value: 0.0005465\n\n1 - (SSE / (nn - 2)) / (SSTO / (nn - 1)) #adj r2\n\n[1] 0.359649"
  },
  {
    "objectID": "Labs/lab1.html#better-model-lab-example",
    "href": "Labs/lab1.html#better-model-lab-example",
    "title": "Lecture & Lab 1: Fitting Linear Models",
    "section": "2.2 Better model (lab example)",
    "text": "2.2 Better model (lab example)\n\n## larger model\nfull_mod &lt;- lm(species ~ area + elevation + nearest, gala)\nfull_mod\n\n\nCall:\nlm(formula = species ~ area + elevation + nearest, data = gala)\n\nCoefficients:\n(Intercept)         area    elevation      nearest  \n   16.46471      0.01908      0.17134      0.07123  \n\n\n\n## get matrix of predictors\nXX &lt;- model.matrix(full_mod)\n## estimate beta\nbeta_hat &lt;- solve(t(XX) %*% XX) %*% t(XX) %*% yy\n## total sum of squares\nSSE &lt;- t(yy - XX %*% beta_hat) %*% (yy - XX %*% beta_hat)\n## error sum of squares\nSSTO &lt;- t(yy - mean(yy)) %*% (yy - mean(yy))\n## F statistic\nF_stat &lt;- ((SSTO - SSE) / (4 - 1)) / (SSE / (nn - 4))\npf(F_stat, 4-1, nn-4, lower.tail = F) #F-test\n\n             [,1]\n[1,] 8.816845e-05\n\n\n\n## null model; the '1' indicates an intercept-only model\nnull_mod &lt;- lm(species ~ 1, gala)\n## use `anova('simple', 'complex')` to get the F-test results\nanova(null_mod, full_mod)\n\n\n\n\n\nRes.Df\nRSS\nDf\nSum of Sq\nF\nPr(&gt;F)\n\n\n\n\n29\n381081.4\nNA\nNA\nNA\nNA\n\n\n26\n169917.6\n3\n211163.8\n10.77043\n8.82e-05\n\n\n\n\n\nfull_mod_sum&lt;-summary(full_mod)\n\npf(full_mod_sum$fstatistic[1], full_mod_sum$fstatistic[2], full_mod_sum$fstatistic[3], lower.tail = F)\n\n       value \n8.816845e-05 \n\n\n\n## reduced model without `nearest`\nreduced_mod &lt;- lm(species ~ area + elevation, gala)\n## use `anova('reduced', 'full')` to get the F-test results\nanova(reduced_mod, full_mod)\n\n\n\n\n\nRes.Df\nRSS\nDf\nSum of Sq\nF\nPr(&gt;F)\n\n\n\n\n27\n169946.8\nNA\nNA\nNA\nNA\n\n\n26\n169917.6\n1\n29.24263\n0.0044746\n0.9471792\n\n\n\n\n\n\n\n2.2.1 Testing a subspace\n\n## full model (with adjacent this time)\nfull_mod2 &lt;- lm(species ~ area + adjacent + elevation + nearest, gala)\n## reduced model without `elevation + nearest`\ncomb_mod &lt;- lm(species ~ I(area + adjacent) + elevation + nearest, gala)\n## use `anova('combined', 'full')` to get the F-test results\nanova(comb_mod, full_mod2)\n\n\n\n\n\nRes.Df\nRSS\nDf\nSum of Sq\nF\nPr(&gt;F)\n\n\n\n\n26\n116865.40\nNA\nNA\nNA\nNA\n\n\n25\n93867.15\n1\n22998.25\n6.125212\n0.0204613\n\n\n\n\n\n\n\n## model with effect of `elevation` = 1\nfixed_mod &lt;- lm(species ~ area + offset(1 * elevation) + nearest, gala)\n## use `anova('comb', 'full')` to get the F-test results\nanova(fixed_mod, full_mod)\n\n\n\n\n\nRes.Df\nRSS\nDf\nSum of Sq\nF\nPr(&gt;F)\n\n\n\n\n27\n1679730.7\nNA\nNA\nNA\nNA\n\n\n26\n169917.6\n1\n1509813\n231.0246\n0\n\n\n\n\n\n\n\nsumary(full_mod)\n\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept) 16.464711  23.388841  0.7040 0.487718\narea         0.019085   0.026764  0.7131 0.482158\nelevation    0.171336   0.054519  3.1427 0.004151\nnearest      0.071227   1.064806  0.0669 0.947179\n\nn = 30, p = 4, Residual SE = 80.84116, R-Squared = 0.55\n\n## t statistic\n(t_value &lt;- (0.171336 - 1) / 0.054519)\n\n[1] -15.19955\n\n## p-value = t_alpha * Pr(t_value, df); `pt()` is the pdf for a t-dist\n(p_value &lt;- 1.96 * pt(t_value, 26))\n\n[1] 1.853024e-14\n\n## verify t^2 = F\nall.equal(t_value^2, anova(fixed_mod, full_mod)$F[2], tolerance = 0.0001)\n\n[1] TRUE\n\n\n\n\n2.2.2 CIs for beta-hat\n\n## critical value for the t-dist\n## `qt()` is the quantile function for the t-dist; `p` is the (1-alpha/2) value \nt_crit &lt;- qt(p = 0.975, df = 30-4)\n## 95% CI\nCI95_beta &lt;- 0.019085 + c(-1,1) * t_crit * 0.026764\nround(CI95_beta, 3)\n\n[1] -0.036  0.074\n\n\n\n## all of the 95% CI's\nconfint(full_mod)\n\n                   2.5 %      97.5 %\n(Intercept) -31.61174063 64.54116288\narea         -0.03593020  0.07409948\nelevation     0.05927051  0.28340204\nnearest      -2.11751249  2.25996697\n\n\n\n\n2.2.3 Bootstrap confidence intervals\n\n## residuals from our full model\nresids &lt;- residuals(full_mod)\n\n## number of bootstrap samples\nnb &lt;- 1000\n## empty matrix for beta estimates\nbeta_est &lt;- matrix(NA, nb, 4)\n## fitted values from our full model = X*beta\nXbeta &lt;- fitted(full_mod)\n## sample many times\nfor(i in 1:nb) {\n  ## 3a: sample w/ replacement from e\n  e_star &lt;- sample(resids, rep = TRUE)\n  ## 3b: calculate y_star\n  y_star &lt;- Xbeta + e_star\n  ## 3c: re-estimate beta_star from X & y_star\n  beta_star &lt;- update(full_mod, y_star ~ .)\n  ## save estimated betas\n  beta_est[i,] &lt;- coef(beta_star)\n}\n\n## extract 2.5% and 97.5% values\nCI95 &lt;- apply(beta_est, 2, quantile, c(0.025, 0.975))\ncolnames(CI95) &lt;- c(\"Intercept\", colnames(gala[,3:5]))\nt(round(CI95, 3))\n\n             2.5%  97.5%\nIntercept -22.402 61.470\nelevation  -0.027  0.084\nnearest     0.073  0.277\nscruz      -1.918  2.150\n\n\n\n\n2.2.4 Boostrap coefficients and CIs using the rsample package\n\nset.seed(462)\nlibrary(rsample)\n\n# Will be used to fit the models to different bootstrap data sets:\nfit_fun &lt;- function(split, ...) {\n  # We could check for convergence, make new parameters, etc.\n  lm(species ~ area + elevation + nearest, data = analysis(split), ...) %&gt;%\n    tidy()\n}\n\nbt &lt;-\n  bootstraps(gala, times = 1000, apparent = TRUE) %&gt;%\n  mutate(models = map(splits, fit_fun))\n\nint_pctl(bt, models)\n\n\n\n\n\nterm\n.lower\n.estimate\n.upper\n.alpha\n.method\n\n\n\n\n(Intercept)\n-33.7640985\n16.8546860\n57.8416355\n0.05\npercentile\n\n\narea\n-0.0911716\n0.1138601\n0.5206100\n0.05\npercentile\n\n\nelevation\n-0.1372787\n0.1516931\n0.4687342\n0.05\npercentile\n\n\nnearest\n-2.4452623\n-0.1349482\n1.8394215\n0.05\npercentile\n\n\n\n\n\n\n\n\n2.2.5 Confidence interval for new predictions\n\n2.2.5.1 By hand\n\n## matrix of predictors\nXX &lt;- model.matrix(simple_model)\n## new X; vector for now\nX_star &lt;- c(intercept = 1, area = 2000)\n## inside sqrt\ninner_X &lt;- t(X_star) %*% solve(t(XX) %*% XX) %*% X_star\n## critical t-value\nt_crit &lt;- qt(0.975, df = nn-2)\n## estimated SD\nsigma &lt;- summary(simple_model)$sigma\n## predicted y\ny_star &lt;- sum(X_star * coef(simple_model))\n## 95% CI\nc(y_star) + c(-1,1) * c(t_crit) * c(sigma) * c(sqrt(inner_X))\n\n[1] 149.5818 305.8366\n\n\n\n\n2.2.5.2 Using predict\n\npredict(simple_model, new = data.frame(t(X_star)),\n        level = 0.95, interval = \"confidence\")\n\n       fit      lwr      upr\n1 227.7092 149.5818 305.8366\n\n\n\n\n\n2.2.6 Prediction interval for new response\n\n## new X_star\nX_star &lt;- c(intercept = 1, area = 2000)\n## inside sqrt\ninner_X &lt;- 1 + t(X_star) %*% solve(t(XX) %*% XX) %*% X_star\n## 95% CI\ny_star + c(-1,1) * c(t_crit) * c(sigma) * c(sqrt(inner_X))\n\n[1]  24.21065 431.20776\n\npredict(simple_model, new = data.frame(t(X_star)),\n        level = 0.95, interval = \"prediction\")\n\n       fit      lwr      upr\n1 227.7092 24.21065 431.2078"
  }
]